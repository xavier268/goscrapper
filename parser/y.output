
state 0
	$accept: .program $end 
	beforeProgram: .    (3)

	.  reduce 3 (src line 79)

	program  goto 1
	beforeProgram  goto 2

state 1
	$accept:  program.$end 

	$end  accept
	.  error


state 2
	program:  beforeProgram.head beforeBody body 
	program:  beforeProgram.beforeBody body 
	beforeBody: .    (4)

	AT  shift 6
	.  reduce 4 (src line 83)

	head  goto 3
	beforeBody  goto 4
	options  goto 5

state 3
	program:  beforeProgram head.beforeBody body 
	head:  head.options 
	beforeBody: .    (4)

	AT  shift 6
	.  reduce 4 (src line 83)

	beforeBody  goto 7
	options  goto 8

state 4
	program:  beforeProgram beforeBody.body 

	FOR  shift 18
	RETURN  shift 13
	IDENTIFIER  shift 15
	SELECT  shift 19
	CLICK  shift 17
	PAGE  shift 16
	.  error

	body  goto 9
	statements  goto 10
	returnStatements  goto 11
	statement  goto 12
	loopClause  goto 14

state 5
	head:  options.    (6)

	.  reduce 6 (src line 90)


state 6
	options:  AT.IDENTIFIER typeDefinition 

	IDENTIFIER  shift 20
	.  error


state 7
	program:  beforeProgram head beforeBody.body 

	FOR  shift 18
	RETURN  shift 13
	IDENTIFIER  shift 15
	SELECT  shift 19
	CLICK  shift 17
	PAGE  shift 16
	.  error

	body  goto 21
	statements  goto 10
	returnStatements  goto 11
	statement  goto 12
	loopClause  goto 14

state 8
	head:  head options.    (5)

	.  reduce 5 (src line 88)


state 9
	program:  beforeProgram beforeBody body.    (2)

	.  reduce 2 (src line 76)


state 10
	body:  statements.returnStatements 
	statements:  statements.statement 

	FOR  shift 18
	RETURN  shift 13
	IDENTIFIER  shift 15
	SELECT  shift 19
	CLICK  shift 17
	PAGE  shift 16
	.  error

	returnStatements  goto 22
	statement  goto 23
	loopClause  goto 14

state 11
	body:  returnStatements.    (14)

	.  reduce 14 (src line 110)


state 12
	statements:  statement.    (15)

	.  reduce 15 (src line 113)


state 13
	returnStatements:  RETURN.returnList 

	IDENTIFIER  shift 25
	.  error

	returnList  goto 24

state 14
	returnStatements:  loopClause.body afterLoop 

	FOR  shift 18
	RETURN  shift 13
	IDENTIFIER  shift 15
	SELECT  shift 19
	CLICK  shift 17
	PAGE  shift 16
	.  error

	body  goto 26
	statements  goto 10
	returnStatements  goto 11
	statement  goto 12
	loopClause  goto 14

state 15
	statement:  IDENTIFIER.ASSIGN expression 

	ASSIGN  shift 27
	.  error


state 16
	statement:  PAGE.expression 

	MINUS  shift 38
	PLUSPLUS  shift 39
	MINUSMINUS  shift 40
	LBRACKET  shift 33
	LPAREN  shift 32
	NOT  shift 43
	LOWER  shift 41
	UPPER  shift 42
	BOOL  shift 37
	IDENTIFIER  shift 34
	STRING  shift 35
	NUMBER  shift 36
	.  error

	expression  goto 28
	expressionUnary  goto 29
	expressionAtom  goto 30
	ope1  goto 31

state 17
	statement:  CLICK.expression 

	MINUS  shift 38
	PLUSPLUS  shift 39
	MINUSMINUS  shift 40
	LBRACKET  shift 33
	LPAREN  shift 32
	NOT  shift 43
	LOWER  shift 41
	UPPER  shift 42
	BOOL  shift 37
	IDENTIFIER  shift 34
	STRING  shift 35
	NUMBER  shift 36
	.  error

	expression  goto 44
	expressionUnary  goto 29
	expressionAtom  goto 30
	ope1  goto 31

state 18
	loopClause:  FOR.IDENTIFIER IN expression 

	IDENTIFIER  shift 45
	.  error


state 19
	loopClause:  SELECT.expression 

	MINUS  shift 38
	PLUSPLUS  shift 39
	MINUSMINUS  shift 40
	LBRACKET  shift 33
	LPAREN  shift 32
	NOT  shift 43
	LOWER  shift 41
	UPPER  shift 42
	BOOL  shift 37
	IDENTIFIER  shift 34
	STRING  shift 35
	NUMBER  shift 36
	.  error

	expression  goto 46
	expressionUnary  goto 29
	expressionAtom  goto 30
	ope1  goto 31

state 20
	options:  AT IDENTIFIER.typeDefinition 

	LBRACKET  shift 52
	INTTYPE  shift 48
	BOOLTYPE  shift 50
	STRINGTYPE  shift 49
	BINTYPE  shift 51
	.  error

	typeDefinition  goto 47

state 21
	program:  beforeProgram head beforeBody body.    (1)

	.  reduce 1 (src line 74)


state 22
	body:  statements returnStatements.    (13)

	.  reduce 13 (src line 108)


state 23
	statements:  statements statement.    (16)

	.  reduce 16 (src line 115)


state 24
	returnStatements:  RETURN returnList.    (20)
	returnList:  returnList.COMMA IDENTIFIER 

	COMMA  shift 53
	.  reduce 20 (src line 124)


state 25
	returnList:  IDENTIFIER.    (23)

	.  reduce 23 (src line 132)


state 26
	returnStatements:  loopClause body.afterLoop 
	afterLoop: .    (22)

	.  reduce 22 (src line 129)

	afterLoop  goto 54

state 27
	statement:  IDENTIFIER ASSIGN.expression 

	MINUS  shift 38
	PLUSPLUS  shift 39
	MINUSMINUS  shift 40
	LBRACKET  shift 33
	LPAREN  shift 32
	NOT  shift 43
	LOWER  shift 41
	UPPER  shift 42
	BOOL  shift 37
	IDENTIFIER  shift 34
	STRING  shift 35
	NUMBER  shift 36
	.  error

	expression  goto 55
	expressionUnary  goto 29
	expressionAtom  goto 30
	ope1  goto 31

state 28
	statement:  PAGE expression.    (18)
	expression:  expression.ope2 expressionUnary 

	MULTI  shift 60
	DIV  shift 61
	MOD  shift 62
	PLUS  shift 57
	MINUS  shift 59
	PLUSPLUS  shift 58
	LTE  shift 66
	GTE  shift 64
	LT  shift 65
	GT  shift 63
	EQ  shift 67
	NEQ  shift 68
	AND  shift 69
	OR  shift 70
	NOT  shift 71
	CONTAINS  shift 72
	.  reduce 18 (src line 120)

	ope2  goto 56

state 29
	expression:  expressionUnary.    (49)

	.  reduce 49 (src line 173)


state 30
	expressionUnary:  expressionAtom.    (51)
	expressionAtom:  expressionAtom.LBRACKET expression RBRACKET 

	LBRACKET  shift 73
	.  reduce 51 (src line 178)


state 31
	expressionUnary:  ope1.expressionAtom 

	LBRACKET  shift 33
	LPAREN  shift 32
	BOOL  shift 37
	IDENTIFIER  shift 34
	STRING  shift 35
	NUMBER  shift 36
	.  error

	expressionAtom  goto 74

state 32
	expressionAtom:  LPAREN.expression RPAREN 

	MINUS  shift 38
	PLUSPLUS  shift 39
	MINUSMINUS  shift 40
	LBRACKET  shift 33
	LPAREN  shift 32
	NOT  shift 43
	LOWER  shift 41
	UPPER  shift 42
	BOOL  shift 37
	IDENTIFIER  shift 34
	STRING  shift 35
	NUMBER  shift 36
	.  error

	expression  goto 75
	expressionUnary  goto 29
	expressionAtom  goto 30
	ope1  goto 31

state 33
	expressionAtom:  LBRACKET.expressionList RBRACKET 

	MINUS  shift 38
	PLUSPLUS  shift 39
	MINUSMINUS  shift 40
	LBRACKET  shift 33
	LPAREN  shift 32
	NOT  shift 43
	LOWER  shift 41
	UPPER  shift 42
	BOOL  shift 37
	IDENTIFIER  shift 34
	STRING  shift 35
	NUMBER  shift 36
	.  error

	expression  goto 77
	expressionUnary  goto 29
	expressionAtom  goto 30
	ope1  goto 31
	expressionList  goto 76

state 34
	expressionAtom:  IDENTIFIER.LPAREN expressionList RPAREN 
	expressionAtom:  IDENTIFIER.LPAREN RPAREN 
	expressionAtom:  IDENTIFIER.    (58)

	LPAREN  shift 78
	.  reduce 58 (src line 189)


state 35
	expressionAtom:  STRING.    (59)

	.  reduce 59 (src line 190)


state 36
	expressionAtom:  NUMBER.    (60)

	.  reduce 60 (src line 191)


state 37
	expressionAtom:  BOOL.    (61)

	.  reduce 61 (src line 192)


state 38
	ope1:  MINUS.    (43)

	.  reduce 43 (src line 164)


state 39
	ope1:  PLUSPLUS.    (44)

	.  reduce 44 (src line 166)


state 40
	ope1:  MINUSMINUS.    (45)

	.  reduce 45 (src line 167)


state 41
	ope1:  LOWER.    (46)

	.  reduce 46 (src line 168)


state 42
	ope1:  UPPER.    (47)

	.  reduce 47 (src line 169)


state 43
	ope1:  NOT.    (48)

	.  reduce 48 (src line 170)


state 44
	statement:  CLICK expression.    (19)
	expression:  expression.ope2 expressionUnary 

	MULTI  shift 60
	DIV  shift 61
	MOD  shift 62
	PLUS  shift 57
	MINUS  shift 59
	PLUSPLUS  shift 58
	LTE  shift 66
	GTE  shift 64
	LT  shift 65
	GT  shift 63
	EQ  shift 67
	NEQ  shift 68
	AND  shift 69
	OR  shift 70
	NOT  shift 71
	CONTAINS  shift 72
	.  reduce 19 (src line 121)

	ope2  goto 56

state 45
	loopClause:  FOR IDENTIFIER.IN expression 

	IN  shift 79
	.  error


state 46
	loopClause:  SELECT expression.    (26)
	expression:  expression.ope2 expressionUnary 

	MULTI  shift 60
	DIV  shift 61
	MOD  shift 62
	PLUS  shift 57
	MINUS  shift 59
	PLUSPLUS  shift 58
	LTE  shift 66
	GTE  shift 64
	LT  shift 65
	GT  shift 63
	EQ  shift 67
	NEQ  shift 68
	AND  shift 69
	OR  shift 70
	NOT  shift 71
	CONTAINS  shift 72
	.  reduce 26 (src line 139)

	ope2  goto 56

state 47
	options:  AT IDENTIFIER typeDefinition.    (7)

	.  reduce 7 (src line 93)


state 48
	typeDefinition:  INTTYPE.    (8)

	.  reduce 8 (src line 97)


state 49
	typeDefinition:  STRINGTYPE.    (9)

	.  reduce 9 (src line 99)


state 50
	typeDefinition:  BOOLTYPE.    (10)

	.  reduce 10 (src line 100)


state 51
	typeDefinition:  BINTYPE.    (11)

	.  reduce 11 (src line 101)


state 52
	typeDefinition:  LBRACKET.typeDefinition RBRACKET 

	LBRACKET  shift 52
	INTTYPE  shift 48
	BOOLTYPE  shift 50
	STRINGTYPE  shift 49
	BINTYPE  shift 51
	.  error

	typeDefinition  goto 80

state 53
	returnList:  returnList COMMA.IDENTIFIER 

	IDENTIFIER  shift 81
	.  error


state 54
	returnStatements:  loopClause body afterLoop.    (21)

	.  reduce 21 (src line 126)


state 55
	statement:  IDENTIFIER ASSIGN expression.    (17)
	expression:  expression.ope2 expressionUnary 

	MULTI  shift 60
	DIV  shift 61
	MOD  shift 62
	PLUS  shift 57
	MINUS  shift 59
	PLUSPLUS  shift 58
	LTE  shift 66
	GTE  shift 64
	LT  shift 65
	GT  shift 63
	EQ  shift 67
	NEQ  shift 68
	AND  shift 69
	OR  shift 70
	NOT  shift 71
	CONTAINS  shift 72
	.  reduce 17 (src line 118)

	ope2  goto 56

state 56
	expression:  expression ope2.expressionUnary 

	MINUS  shift 38
	PLUSPLUS  shift 39
	MINUSMINUS  shift 40
	LBRACKET  shift 33
	LPAREN  shift 32
	NOT  shift 43
	LOWER  shift 41
	UPPER  shift 42
	BOOL  shift 37
	IDENTIFIER  shift 34
	STRING  shift 35
	NUMBER  shift 36
	.  error

	expressionUnary  goto 82
	expressionAtom  goto 30
	ope1  goto 31

state 57
	ope2:  PLUS.    (27)

	.  reduce 27 (src line 145)


state 58
	ope2:  PLUSPLUS.    (28)

	.  reduce 28 (src line 147)


state 59
	ope2:  MINUS.    (29)

	.  reduce 29 (src line 148)


state 60
	ope2:  MULTI.    (30)

	.  reduce 30 (src line 149)


state 61
	ope2:  DIV.    (31)

	.  reduce 31 (src line 150)


state 62
	ope2:  MOD.    (32)

	.  reduce 32 (src line 151)


state 63
	ope2:  GT.    (33)

	.  reduce 33 (src line 152)


state 64
	ope2:  GTE.    (34)

	.  reduce 34 (src line 153)


state 65
	ope2:  LT.    (35)

	.  reduce 35 (src line 154)


state 66
	ope2:  LTE.    (36)

	.  reduce 36 (src line 155)


state 67
	ope2:  EQ.    (37)

	.  reduce 37 (src line 156)


state 68
	ope2:  NEQ.    (38)

	.  reduce 38 (src line 157)


state 69
	ope2:  AND.    (39)

	.  reduce 39 (src line 158)


state 70
	ope2:  OR.    (40)

	.  reduce 40 (src line 159)


state 71
	ope2:  NOT.    (41)

	.  reduce 41 (src line 160)


state 72
	ope2:  CONTAINS.    (42)

	.  reduce 42 (src line 161)


state 73
	expressionAtom:  expressionAtom LBRACKET.expression RBRACKET 

	MINUS  shift 38
	PLUSPLUS  shift 39
	MINUSMINUS  shift 40
	LBRACKET  shift 33
	LPAREN  shift 32
	NOT  shift 43
	LOWER  shift 41
	UPPER  shift 42
	BOOL  shift 37
	IDENTIFIER  shift 34
	STRING  shift 35
	NUMBER  shift 36
	.  error

	expression  goto 83
	expressionUnary  goto 29
	expressionAtom  goto 30
	ope1  goto 31

state 74
	expressionUnary:  ope1 expressionAtom.    (52)
	expressionAtom:  expressionAtom.LBRACKET expression RBRACKET 

	LBRACKET  shift 73
	.  reduce 52 (src line 180)


state 75
	expression:  expression.ope2 expressionUnary 
	expressionAtom:  LPAREN expression.RPAREN 

	MULTI  shift 60
	DIV  shift 61
	MOD  shift 62
	PLUS  shift 57
	MINUS  shift 59
	PLUSPLUS  shift 58
	LTE  shift 66
	GTE  shift 64
	LT  shift 65
	GT  shift 63
	EQ  shift 67
	NEQ  shift 68
	RPAREN  shift 84
	AND  shift 69
	OR  shift 70
	NOT  shift 71
	CONTAINS  shift 72
	.  error

	ope2  goto 56

state 76
	expressionAtom:  LBRACKET expressionList.RBRACKET 
	expressionList:  expressionList.COMMA expression 

	COMMA  shift 86
	RBRACKET  shift 85
	.  error


state 77
	expression:  expression.ope2 expressionUnary 
	expressionList:  expression.    (62)

	MULTI  shift 60
	DIV  shift 61
	MOD  shift 62
	PLUS  shift 57
	MINUS  shift 59
	PLUSPLUS  shift 58
	LTE  shift 66
	GTE  shift 64
	LT  shift 65
	GT  shift 63
	EQ  shift 67
	NEQ  shift 68
	AND  shift 69
	OR  shift 70
	NOT  shift 71
	CONTAINS  shift 72
	.  reduce 62 (src line 195)

	ope2  goto 56

state 78
	expressionAtom:  IDENTIFIER LPAREN.expressionList RPAREN 
	expressionAtom:  IDENTIFIER LPAREN.RPAREN 

	MINUS  shift 38
	PLUSPLUS  shift 39
	MINUSMINUS  shift 40
	LBRACKET  shift 33
	LPAREN  shift 32
	RPAREN  shift 88
	NOT  shift 43
	LOWER  shift 41
	UPPER  shift 42
	BOOL  shift 37
	IDENTIFIER  shift 34
	STRING  shift 35
	NUMBER  shift 36
	.  error

	expression  goto 77
	expressionUnary  goto 29
	expressionAtom  goto 30
	ope1  goto 31
	expressionList  goto 87

state 79
	loopClause:  FOR IDENTIFIER IN.expression 

	MINUS  shift 38
	PLUSPLUS  shift 39
	MINUSMINUS  shift 40
	LBRACKET  shift 33
	LPAREN  shift 32
	NOT  shift 43
	LOWER  shift 41
	UPPER  shift 42
	BOOL  shift 37
	IDENTIFIER  shift 34
	STRING  shift 35
	NUMBER  shift 36
	.  error

	expression  goto 89
	expressionUnary  goto 29
	expressionAtom  goto 30
	ope1  goto 31

state 80
	typeDefinition:  LBRACKET typeDefinition.RBRACKET 

	RBRACKET  shift 90
	.  error


state 81
	returnList:  returnList COMMA IDENTIFIER.    (24)

	.  reduce 24 (src line 134)


state 82
	expression:  expression ope2 expressionUnary.    (50)

	.  reduce 50 (src line 175)


state 83
	expression:  expression.ope2 expressionUnary 
	expressionAtom:  expressionAtom LBRACKET expression.RBRACKET 

	MULTI  shift 60
	DIV  shift 61
	MOD  shift 62
	PLUS  shift 57
	MINUS  shift 59
	PLUSPLUS  shift 58
	LTE  shift 66
	GTE  shift 64
	LT  shift 65
	GT  shift 63
	EQ  shift 67
	NEQ  shift 68
	RBRACKET  shift 91
	AND  shift 69
	OR  shift 70
	NOT  shift 71
	CONTAINS  shift 72
	.  error

	ope2  goto 56

state 84
	expressionAtom:  LPAREN expression RPAREN.    (53)

	.  reduce 53 (src line 183)


state 85
	expressionAtom:  LBRACKET expressionList RBRACKET.    (55)

	.  reduce 55 (src line 186)


state 86
	expressionList:  expressionList COMMA.expression 

	MINUS  shift 38
	PLUSPLUS  shift 39
	MINUSMINUS  shift 40
	LBRACKET  shift 33
	LPAREN  shift 32
	NOT  shift 43
	LOWER  shift 41
	UPPER  shift 42
	BOOL  shift 37
	IDENTIFIER  shift 34
	STRING  shift 35
	NUMBER  shift 36
	.  error

	expression  goto 92
	expressionUnary  goto 29
	expressionAtom  goto 30
	ope1  goto 31

state 87
	expressionAtom:  IDENTIFIER LPAREN expressionList.RPAREN 
	expressionList:  expressionList.COMMA expression 

	COMMA  shift 86
	RPAREN  shift 93
	.  error


state 88
	expressionAtom:  IDENTIFIER LPAREN RPAREN.    (57)

	.  reduce 57 (src line 188)


state 89
	loopClause:  FOR IDENTIFIER IN expression.    (25)
	expression:  expression.ope2 expressionUnary 

	MULTI  shift 60
	DIV  shift 61
	MOD  shift 62
	PLUS  shift 57
	MINUS  shift 59
	PLUSPLUS  shift 58
	LTE  shift 66
	GTE  shift 64
	LT  shift 65
	GT  shift 63
	EQ  shift 67
	NEQ  shift 68
	AND  shift 69
	OR  shift 70
	NOT  shift 71
	CONTAINS  shift 72
	.  reduce 25 (src line 137)

	ope2  goto 56

state 90
	typeDefinition:  LBRACKET typeDefinition RBRACKET.    (12)

	.  reduce 12 (src line 102)


state 91
	expressionAtom:  expressionAtom LBRACKET expression RBRACKET.    (54)

	.  reduce 54 (src line 185)


state 92
	expression:  expression.ope2 expressionUnary 
	expressionList:  expressionList COMMA expression.    (63)

	MULTI  shift 60
	DIV  shift 61
	MOD  shift 62
	PLUS  shift 57
	MINUS  shift 59
	PLUSPLUS  shift 58
	LTE  shift 66
	GTE  shift 64
	LT  shift 65
	GT  shift 63
	EQ  shift 67
	NEQ  shift 68
	AND  shift 69
	OR  shift 70
	NOT  shift 71
	CONTAINS  shift 72
	.  reduce 63 (src line 197)

	ope2  goto 56

state 93
	expressionAtom:  IDENTIFIER LPAREN expressionList RPAREN.    (56)

	.  reduce 56 (src line 187)


84 terminals, 20 nonterminals
64 grammar rules, 94/16000 states
0 shift/reduce, 0 reduce/reduce conflicts reported
69 working sets used
memory: parser 84/240000
25 extra closures
336 shift entries, 1 exceptions
37 goto entries
47 entries saved by goto default
Optimizer space used: output 166/240000
166 table entries, 22 zero
maximum spread: 84, maximum offset: 86
