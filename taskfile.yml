version: "3"

env:
  GOOS: # windows or linux ?
    sh: go env GOOS
  VERSION: # program version
    sh: go run ./cli -version
  EXE: # executable extension (.exe or nothing)
    sh: 'if [ "$(go env GOOS)" = "windows" ]; then echo ".exe"; else echo ""; fi'
  BROWSER: # browser to open  page
    sh: 'if [ "$(go env GOOS)" = "windows" ]; then echo "Powershell Start-Process "; else echo "xdg-open"; fi'
  DATE: # date string
    sh: 'if [ "$(go env GOOS)" = "windows" ]; then echo "$(Powershell Get-Date -Format s)"; else echo "$(date -Iseconds)"; fi'

tasks:

  default:
    desc: default task will display task menu
    cmds:
      - task --list-all

  version: 
    desc: display versionning information
    deps: [build]
    cmds:
      - task --version
      - go version
      - bin/cli-{{.VERSION}}{{.EXE}} -info

  godoc: 
    desc: launch godoc viewer and open browser page on windows
    cmds:     
      - go install golang.org/x/tools/cmd/godoc@latest
      - godoc -http=:6060 &     
      - $( {{.BROWSER }} "http://localhost:6060" )

  build:
    desc: build program and utilities
    sources: # what triggers rebuild
      - ./**/*go
    cmds:
      - go mod tidy
      - go build -o bin/cli-{{.VERSION}}{{.EXE}} -ldflags "-X 'github.com/xavier268/goscrapper/generator.BUILDDATE={{.DATE}}' -X 'github.com/xavier268/goscrapper/generator.GITHASH=$(git rev-parse HEAD)'" ./cli

  test:
    desc: run all tests
    deps: [build]
    sources: 
      - ./**/*.yml
      - ./**/*.yaml
    cmds:
      - go test ./...

  clean: 
    desc: clean caches and binaries, and test dirs
    deps : # dependencies tasks will run in parallel
      - clean-linux
      - clean-windows

  clean-linux:
    internal: true
    platforms: [linux]
    cmds:
      - rm -rf bin/
      - rm -rf .task/

  clean-windows:
    internal: true
    platforms: [windows]
    cmds:
      - Powershell Remove-Item bin -Recurse
      - Powershell Remove-Item .task -Recurse 
